<?php
/*
 * Automatically generate missing translation into category translate file for CPhpMessageSource
 * @author Nguyen Dinh Trung <nguyendinhtrung141@gmail.com>
 */
class CPhpMessageTranslator extends CApplicationComponent{
	public static $message = array();
	public static $init = FALSE;
	public static function appendMessage(CMissingTranslationEvent $event){
		self::$message[$event->language][$event->category][$event->message] = '';
		if (! self::$init){
			Yii::app()->attachEventHandler('onEndRequest', array('CPhpMessageTranslator', 'writeMessage'));
			self::$init = TRUE;
		}
	}
	public static function writeMessage(){
		$overwrite = TRUE;
		$removeOld = TRUE;
		$sort = TRUE;

		foreach (self::$message as $lang => $data){
			$dir = Yii::getPathOfAlias('application.messages') . DIRECTORY_SEPARATOR . $lang;
			if (! is_dir($dir)) mkdir($dir, 0777, TRUE);
			foreach ($data as $category => $untranslated){
				$fileName = $dir . DIRECTORY_SEPARATOR . $category . '.php';
				ksort($untranslated);
				$merged = $untranslated;

				if(is_file($fileName))
				{
					$translated=require($fileName);
					if (is_array($translated)) ksort($translated); else $translated = array();
					$merged = array_merge($untranslated, $translated);
				}
				$array=str_replace("\r",'',var_export($merged,true));
				$content=<<<EOD
<?php
/**
 * Message translations.
 *
 * This file is automatically generated by 'yiic message' command.
 * It contains the localizable messages extracted from source code.
 * You may modify this file by translating the extracted messages.
 *
 * Each array element represents the translation (value) of a message (key).
 * If the value is empty, the message is considered as not translated.
 * Messages that no longer need translation will have their translations
 * enclosed between a pair of '@@' marks.
 *
 * Message string can be used with plural forms format. Check i18n section
 * of the guide for details.
 *
 * NOTE, this file must be saved in UTF-8 encoding.
 */
return $array;

EOD;
				file_put_contents($fileName, $content);
			}
		}
	}
}